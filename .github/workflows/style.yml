name:                  Check style

on:
  pull_request:
  push:
    branches:
      - master
      - stable
    tags:
      - v*
    paths-ignore:
      - 'README.md'
      - diagrams/
jobs:
## Check stage
  test:
    name:              Check
    runs-on:           ubuntu-latest
    env:
      RUST_BACKTRACE:  full
    steps:
      - name:          Checkout sources & submodules
        uses:          actions/checkout@master
        with:
          fetch-depth: 5
          submodules:  recursive
      - name:          Install nightly toolchain & wasm32
        uses:          actions-rs/toolchain@master
        with:
          profile:     minimal
          toolchain:   nightly
          target:      wasm32-unknown-unknown
          components:  clippy, rustfmt
          override:    true
      - name: Configure cargo data directory
        run: echo "::set-env name=CARGO_HOME::$(pwd)/target/cargo"
      - name: Cache
        uses: actions/cache@v2
        with:
          path: |-
            target/cargo
            target/sccache
            target/*/.*
            target/*/build
            target/*/deps
          key: clippy-${{ hashFiles('Cargo.lock') }}
          restore-keys: clippy-
      - name: Install and start sccache
        shell: pwsh
        env:
          SCCACHE_DIR: ${{ github.workspace }}/target/sccache
          SCCACHE_CACHE_SIZE: 1G
          SCCACHE_IDLE_TIMEOUT: 0
        run: |
          $version = "0.2.12"
          $platform =
            @{ "macOS"   = "x86_64-apple-darwin"
               "Linux"   = "x86_64-unknown-linux-musl"
               "Windows" = "x86_64-pc-windows-msvc"
             }.${{ runner.os }}
          $basename = "sccache-$version-$platform"
          $url = "https://github.com/mozilla/sccache/releases/download/" +
                 "$version/$basename.tar.gz"
          cd ~
          curl -LO $url
          tar -xzvf "$basename.tar.gz"
          . $basename/sccache --start-server
          echo "::add-path::$(pwd)/$basename"
      - name:          Set sccache ENV
        run:  |
          echo "::set-env name=RUSTC_WRAPPER::sccache"
          echo "::set-env name=CMAKE_C_COMPILER_LAUNCHER::sccache"
          echo "::set-env name=CMAKE_CXX_COMPILER_LAUNCHER::sccache"
      - name:          Style check
        uses:          actions-rs/cargo@master
        with:
          command:     fmt
          args:        --all -- --check
      - name:          Fetch
        uses:          actions-rs/cargo@master
        with:
          command:     fetch
      - name:          Clippy
        uses:          actions-rs/cargo@master
        with:
          command:     clippy
          args:        --all-targets -- -D warnings
