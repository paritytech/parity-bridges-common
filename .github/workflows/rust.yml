name:                              Check, test and build Suite

on:
  pull_request:
  push:
    branches:
      - master
    tags:
      - v*
    paths-ignore:
      - 'README.md'
      - diagrams/
  schedule:                        #Nightly build
    - cron:                        '0 0 * * *'
jobs:

## Check stage
  check-style:
    name:                          Check format and clippy
    runs-on:                       self-hosted
    container:                     paritytech/ci-linux:production
    env:
      RUST_BACKTRACE:              full
    steps:
      - name:                      Checkout sources & submodules
        uses:                      actions/checkout@master
        with:
          fetch-depth:             5
          submodules:              recursive
      - name:                      Add rustfmt and clippy
        run:                       rustup component add rustfmt clippy --toolchain nightly
      - name:                      Style check
        uses:                      actions-rs/cargo@master
        with:
          command:                 fmt
          toolchain:               nightly
          args:                    --all -- --check
      - name:                      Fetch
        uses:                      actions-rs/cargo@master
        with:
          command:                 fetch
          toolchain:               nightly
      - name:                      Clippy
        uses:                      actions-rs/cargo@master
        with:
          command:                 clippy
          toolchain:               nightly
          args:                    --all-targets -- -D warnings
## Check stage
  check-test-build:
    name:                          Check, test and build
    strategy:
      matrix:
        toolchain:
          - stable
          #- beta
          - nightly
    runs-on:                       self-hosted
    container:
      image:                       paritytech/ci-linux:production
      volumes:
        - /__w/:/cache
      options:                     --cpus 4
    env:
      RUST_BACKTRACE:              full
      SCCACHE_REDIS:               redis://172.17.0.1/0
      SCCACHE_IDLE_TIMEOUT:        0
      CMAKE_C_COMPILER_LAUNCHER:   sccache
      CMAKE_CXX_COMPILER_LAUNCHER: sccache
    steps:
      - name:                      Checkout sources & submodules
        uses:                      actions/checkout@master
        with:
          fetch-depth:             5
          submodules:              recursive
      - name:                      ref
        run: echo ${{ github.ref }}
      - name:                      Configure cargo data directory
        run:                       echo "::set-env name=CARGO_HOME::/__w/"
      - name:                      Checking rust-${{ matrix.toolchain }}
        uses:                      actions-rs/cargo@master
        with:
          command:                 check
          toolchain:               ${{ matrix.toolchain }}
          args:                    --all  --verbose
      - name:                      Stats sccache
        if:                        always()
        run:                       sccache --show-stats
## Test stage
      - name:                      Testing rust-${{ matrix.toolchain }}
        uses:                      actions-rs/cargo@master
        with:
          command:                 test
          toolchain:               ${{ matrix.toolchain }}
          args:                    --all  --verbose
      - name:                      Stats sccache
        if:                        always()
        run:                       sccache --show-stats
## Build stage
      - name:                      Building rust-${{ matrix.toolchain }}
        uses:                      actions-rs/cargo@master
        with:
          command:                 build
          toolchain:               ${{ matrix.toolchain }}
          args:                    --all --release --verbose
      - name:                      Stats sccache
        if:                        always()
        run:                       sccache --show-stats
      - name:                      Prepare artifact's
        run:                       |
          mkdir -p ./artifacts
          mv -v ./target/release/bridge-node ./artifacts/
          mv -v ./target/release/ethereum-poa-relay ./artifacts/
          mv -v ./target/release/substrate-bridge ./artifacts/
        shell:                     bash
      - name:                      Upload artifact's
        uses:                      actions/upload-artifact@v1
        with:
          name:                    ${{ matrix.toolchain }}.zip
          path:                    artifacts/

  # Build `mdBook` documentation and upload it as a temporary build artifact
  #doc-book:
  #  name:                         Build the book
  #  runs-on:                      self-hosted
  #  steps:
  #    - uses:                     actions/checkout@v1
  #    - run:                      |
  #        set -e
  #        curl -L https://github.com/rust-lang-nursery/mdBook/releases/download/v0.3.1/mdbook-v0.3.1-x86_64-unknown-linux-gnu.tar.gz | tar xzf -
  #        echo ::add-path::`pwd`
  #    - run:                      (cd docs && mdbook build)
  #    - uses:                     actions/upload-artifact@v1
  #      with:
  #        name:                   doc-book
  #        path:                   docs/book
